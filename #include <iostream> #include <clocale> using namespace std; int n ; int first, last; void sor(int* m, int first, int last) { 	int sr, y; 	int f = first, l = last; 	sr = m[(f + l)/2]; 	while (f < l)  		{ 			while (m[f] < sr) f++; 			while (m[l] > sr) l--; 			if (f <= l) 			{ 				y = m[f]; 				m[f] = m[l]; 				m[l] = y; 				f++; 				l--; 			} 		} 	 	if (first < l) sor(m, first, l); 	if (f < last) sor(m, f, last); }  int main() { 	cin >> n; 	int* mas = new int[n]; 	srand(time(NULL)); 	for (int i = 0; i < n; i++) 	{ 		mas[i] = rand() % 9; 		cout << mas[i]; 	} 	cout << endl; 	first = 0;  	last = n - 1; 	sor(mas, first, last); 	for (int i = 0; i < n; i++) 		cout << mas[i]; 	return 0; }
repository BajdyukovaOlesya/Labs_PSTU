#include <iostream>
#include <clocale>
using namespace std;
int n ;
int first, last;
void sor(int* m, int first, int last)
{
	int sr, y;
	int f = first, l = last;
	sr = m[(f + l) / 2];
	while (f < l) 
		{
			while (m[f] < sr) f++;
			while (m[l] > sr) l--;
			if (f <= l)
			{
				y = m[f];
				m[f] = m[l];
				m[l] = y;
				f++;
				l--;
			}
		}
	
	if (first < l) sor(m, first, l);
	if (f < last) sor(m, f, last);
}

int main()
{
	cin >> n;
	int* mas = new int[n];
	srand(time(NULL));
	for (int i = 0; i < n; i++)
	{
		mas[i] = rand() % 9;
		cout << mas[i];
	}
	cout << endl;
	first = 0; 
	last = n - 1;
	sor(mas, first, last);
	for (int i = 0; i < n; i++)
		cout << mas[i];
	return 0;
}
